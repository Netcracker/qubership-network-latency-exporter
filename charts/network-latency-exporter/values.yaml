# Default values for network-latency-exporter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Provide a name in place of network-latency-exporter for labels.
nameOverride: ""

# Provide a name to substitute for the full names of resources.
fullnameOverride: ""

rbac:
  createClusterRole: true
  createClusterRoleBinding: true
  setupSecurityContext: true

createGrafanaDashboards: true

# Service account for network-latency-exporter to use.
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
# Type: object
#
serviceAccount:

  # Allow to create ServiceAccount during deploy.
  create: true

  # Provide a name in place of network-latency-exporter for ServiceAccount.
  name: "network-latency-exporter"

# A docker image to use for network-latency-exporter DaemonSet.
# Type: string
# Mandatory: yes
#
#image: ghcr.io/netcracker/qubership-network-latency-exporter:main

# Only pods which provide own keys can access the private registry.
# Default: []
#
imagePullSecrets: []

# The resources describes the compute resource requests and limits for single Pods.
# Ref: https://kubernetes.io/docs/user-guide/compute-resources/
# Type: object
# Mandatory: no
#
resources:
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

# SecurityContext holds pod-level security attributes.
# The parameters are required if a Pod Security Policy is enabled
# for Kubernetes cluster and required if a Security Context Constraints is enabled
# for OpenShift cluster.
# Type: object
# Mandatory: no
#
securityContext:
  # The UID to run the entrypoint of the container process.
  # Defaults to user specified in image metadata if unspecified.
  # The default value is set to "0",
  # because otherwise the exporter does not work correctly.
  # Type: integer
  # Mandatory: no
  #
  runAsUser: "1000"

  # A special supplemental group that applies to all containers in a pod.
  # Some volume types allow the Kubelet to change the ownership of that volume
  # to be owned by the pod:
  #   1. The owning GID will be the FSGroup
  #   2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
  #   3. The permission bits are OR'd with rw-rw----
  # If unset, the Kubelet will not modify the ownership and permissions of any volume.
  # Type: integer
  # Mandatory: no
  #
  fsGroup: 2000

# Tolerations allow the pods to schedule onto nodes with matching taints.
# Type: object
# Mandatory: no
#
tolerations: []

# Allow to define which Nodes the Pods are scheduled on.
# Type: map[string]
# Mandatory: no
# Default: not set
#
nodeSelector: {}

# If specified, the pod's scheduling constraints
# More info: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#affinity-v1-core
# Type: object
# Mandatory: no
# Default: not set
#
affinity: {}

# Allow enabling/disabling script for discovering nodes IP.
# Type: boolean
# Mandatory: no
# Default: true
#
discoverEnable: true

extraArgs: []
 #  - "--log.level=debug"

requestTimeout: 3
timeout: 100s
packetsNum: 10
packetSize: 64
checkTarget: "UDP:80,TCP:80,ICMP"
latencyTypes: "node_collector"
mtrTimeout: 10

serviceMonitor:
  enabled: true
  interval: 30s
  scrapeTimeout: 20s

# additionalLabels:
#   key: value
